{"project": "activitysim", "project_url": "https://activitysim.github.io/", "show_commit_url": "http://github.com/ActivitySim/activitysim/commit/", "hash_length": 8, "revision_to_hash": {"1020": "7b57c94e12d27a23f86c8988117e885ae754c44e", "1061": "a3dca1f8280374cc3fa22aa27d0503a20f3bdf58", "1182": "3b70dfc00fa020f3f3527653a29d042c12426754", "1190": "fe2614d41f674fc38d2d693523e80f8cc5fad4a1", "1214": "964ee009f81f2fe14e908ed8a3f1881f04d07127", "1318": "31705411a0632ebe02213ce3cd5fa069fade0d63", "1478": "885f5874c499f041442d1376fbd401281e0db369", "1489": "bcdc7b63d4ff7bc2703810e226090c75c380bda4", "1568": "5803923238856a4be95a27a778f2478225484b8c", "1576": "a57efa1418320cb88d72ad5f413aaa45131183a4", "1731": "ec085e6bccf09286e9c17edf5443447082d3a3ac", "1758": "55bd7122d9bdc275d1a2ed9f3e727e6c1593d488", "2030": "b0e849515c56fd07ea3dd3f0a2a085de68996fb4", "2031": "d1e73b6f6f5b7d6fbd7fdbe0aa606bf5b35605f5", "2040": "d3ee01edaf17b093c14e559f45a029eb47c2ee5d", "2057": "91f3f3c708825036da2e24421a34a7d9c515fe75"}, "revision_to_date": {"1020": 1572549173000, "1061": 1580841180000, "1182": 1599181680000, "1190": 1599766654000, "1214": 1603223741000, "1318": 1610604744000, "1478": 1619105583000, "1489": 1619207274000, "1568": 1623452572000, "1576": 1623724154000, "1731": 1628693189000, "1758": 1629911938000, "2030": 1636390972000, "2031": 1636395047000, "2040": 1636494560000, "2057": 1637368883000}, "params": {"arch": ["AMD64", "x86_64"], "coverage": [""], "cpu": ["Intel(R) Core(TM) i9-9880H CPU @ 2.30GHz", "Intel(R) Xeon(R) CPU E5-2699 v3 @2.30GHz (2 processors)", "Intel(R) Xeon(R) E5-2697 v4 @ 2.30 GHz", "Intel(R) Xeon(R) Silver 4116 CPU @ 2.10GHz   2.10 GHz  (2 processors)"], "cytoolz": [""], "machine": ["CAMHPC01", "CHICWS02", "LUMBERJACK", "MEDCWS01", "OAKCWS03"], "num_cpu": ["16", "36", "48", "72"], "numba": [""], "numpy": [""], "openmatrix": [""], "orca": [""], "os": ["Darwin 19.6.0", "Windows 10", "Windows 10 Enterprise", "Windows 2012ServerR2"], "pandas": [""], "psutil": [""], "pyarrow": [""], "pytables": [""], "pytest": [""], "python": ["3.9"], "pyyaml": [""], "ram": ["256 GB", "64GB"], "requests": [""], "toolz": [""], "branch": ["master", "develop", "performanceTest"]}, "graph_param_list": [{"arch": "x86_64", "coverage": "", "cpu": "Intel(R) Xeon(R) E5-2697 v4 @ 2.30 GHz", "cytoolz": "", "machine": "OAKCWS03", "num_cpu": "36", "numba": "", "numpy": "", "openmatrix": "", "orca": "", "os": "Windows 10", "pandas": "", "psutil": "", "pyarrow": "", "pytables": "", "pytest": "", "python": "3.9", "pyyaml": "", "ram": "64GB", "requests": "", "toolz": "", "branch": "performanceTest"}, {"arch": "x86_64", "coverage": "", "cpu": "Intel(R) Xeon(R) CPU E5-2699 v3 @2.30GHz (2 processors)", "cytoolz": "", "machine": "CAMHPC01", "num_cpu": "72", "numba": "", "numpy": "", "openmatrix": "", "orca": "", "os": "Windows 2012ServerR2", "pandas": "", "psutil": "", "pyarrow": "", "pytables": "", "pytest": "", "python": "3.9", "pyyaml": "", "ram": "256 GB", "requests": "", "toolz": "", "branch": "performanceTest"}, {"arch": "AMD64", "coverage": "", "cpu": "Intel(R) Xeon(R) Silver 4116 CPU @ 2.10GHz   2.10 GHz  (2 processors)", "cytoolz": "", "machine": "CHICWS02", "num_cpu": "48", "numba": "", "numpy": "", "openmatrix": "", "orca": "", "os": "Windows 10", "pandas": "", "psutil": "", "pyarrow": "", "pytables": "", "pytest": "", "python": "3.9", "pyyaml": "", "ram": "256 GB", "requests": "", "toolz": "", "branch": "performanceTest"}, {"arch": "x86_64", "cpu": "Intel(R) Xeon(R) Silver 4116 CPU @ 2.10GHz   2.10 GHz  (2 processors)", "machine": "MEDCWS01", "num_cpu": "48", "os": "Windows 10 Enterprise", "ram": "256 GB", "python": "3.9", "coverage": "", "cytoolz": "", "numba": "", "numpy": "", "openmatrix": "", "orca": "", "pandas": "", "psutil": "", "pyarrow": "", "pytables": "", "pytest": "", "pyyaml": "", "requests": "", "toolz": "", "branch": "performanceTest"}, {"arch": "x86_64", "coverage": "", "cpu": "Intel(R) Core(TM) i9-9880H CPU @ 2.30GHz", "cytoolz": "", "machine": "LUMBERJACK", "num_cpu": "16", "numba": "", "numpy": "", "openmatrix": "", "orca": "", "os": "Darwin 19.6.0", "pandas": "", "psutil": "", "pyarrow": "", "pytables": "", "pytest": "", "python": "3.9", "pyyaml": "", "ram": "64GB", "requests": "", "toolz": "", "branch": "performanceTest"}], "benchmarks": {"mtc1full.atwork_subtour_destination.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "min_run_count": 1, "name": "mtc1full.atwork_subtour_destination.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_mtc_full:atwork_subtour_destination", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./mtc1full.py:55", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "mtc1full.atwork_subtour_frequency.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "min_run_count": 1, "name": "mtc1full.atwork_subtour_frequency.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_mtc_full:atwork_subtour_frequency", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./mtc1full.py:55", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "mtc1full.atwork_subtour_mode_choice.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "min_run_count": 1, "name": "mtc1full.atwork_subtour_mode_choice.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_mtc_full:atwork_subtour_mode_choice", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./mtc1full.py:55", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "mtc1full.atwork_subtour_scheduling.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "min_run_count": 1, "name": "mtc1full.atwork_subtour_scheduling.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_mtc_full:atwork_subtour_scheduling", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./mtc1full.py:55", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "mtc1full.auto_ownership_simulate.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "min_run_count": 1, "name": "mtc1full.auto_ownership_simulate.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_mtc_full:auto_ownership_simulate", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./mtc1full.py:55", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "mtc1full.cdap_simulate.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "min_run_count": 1, "name": "mtc1full.cdap_simulate.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_mtc_full:cdap_simulate", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./mtc1full.py:55", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "mtc1full.free_parking.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "min_run_count": 1, "name": "mtc1full.free_parking.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_mtc_full:free_parking", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./mtc1full.py:55", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "mtc1full.joint_tour_composition.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "min_run_count": 1, "name": "mtc1full.joint_tour_composition.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_mtc_full:joint_tour_composition", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./mtc1full.py:55", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "mtc1full.joint_tour_destination.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "min_run_count": 1, "name": "mtc1full.joint_tour_destination.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_mtc_full:joint_tour_destination", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./mtc1full.py:55", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "mtc1full.joint_tour_frequency.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "min_run_count": 1, "name": "mtc1full.joint_tour_frequency.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_mtc_full:joint_tour_frequency", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./mtc1full.py:55", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "mtc1full.joint_tour_participation.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "min_run_count": 1, "name": "mtc1full.joint_tour_participation.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_mtc_full:joint_tour_participation", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./mtc1full.py:55", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "mtc1full.joint_tour_scheduling.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "min_run_count": 1, "name": "mtc1full.joint_tour_scheduling.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_mtc_full:joint_tour_scheduling", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./mtc1full.py:55", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "mtc1full.mandatory_tour_frequency.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "min_run_count": 1, "name": "mtc1full.mandatory_tour_frequency.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_mtc_full:mandatory_tour_frequency", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./mtc1full.py:55", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "mtc1full.mandatory_tour_scheduling.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "min_run_count": 1, "name": "mtc1full.mandatory_tour_scheduling.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_mtc_full:mandatory_tour_scheduling", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./mtc1full.py:55", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "mtc1full.non_mandatory_tour_destination.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "min_run_count": 1, "name": "mtc1full.non_mandatory_tour_destination.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_mtc_full:non_mandatory_tour_destination", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./mtc1full.py:55", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "mtc1full.non_mandatory_tour_frequency.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "min_run_count": 1, "name": "mtc1full.non_mandatory_tour_frequency.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_mtc_full:non_mandatory_tour_frequency", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./mtc1full.py:55", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "mtc1full.non_mandatory_tour_scheduling.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "min_run_count": 1, "name": "mtc1full.non_mandatory_tour_scheduling.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_mtc_full:non_mandatory_tour_scheduling", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./mtc1full.py:55", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "mtc1full.school_location.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "min_run_count": 1, "name": "mtc1full.school_location.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_mtc_full:school_location", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./mtc1full.py:55", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "mtc1full.stop_frequency.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "min_run_count": 1, "name": "mtc1full.stop_frequency.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_mtc_full:stop_frequency", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./mtc1full.py:55", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "mtc1full.tour_mode_choice_simulate.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "min_run_count": 1, "name": "mtc1full.tour_mode_choice_simulate.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_mtc_full:tour_mode_choice_simulate", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./mtc1full.py:55", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "mtc1full.trip_destination.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "min_run_count": 1, "name": "mtc1full.trip_destination.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_mtc_full:trip_destination", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./mtc1full.py:55", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "mtc1full.trip_mode_choice.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "min_run_count": 1, "name": "mtc1full.trip_mode_choice.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_mtc_full:trip_mode_choice", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./mtc1full.py:55", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "mtc1full.trip_purpose.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "min_run_count": 1, "name": "mtc1full.trip_purpose.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_mtc_full:trip_purpose", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./mtc1full.py:55", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "mtc1full.trip_purpose_and_destination.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "min_run_count": 1, "name": "mtc1full.trip_purpose_and_destination.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_mtc_full:trip_purpose_and_destination", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./mtc1full.py:55", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "mtc1full.trip_scheduling.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "min_run_count": 1, "name": "mtc1full.trip_scheduling.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_mtc_full:trip_scheduling", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./mtc1full.py:55", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "mtc1full.workplace_location.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "min_run_count": 1, "name": "mtc1full.workplace_location.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_mtc_full:workplace_location", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./mtc1full.py:55", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "mtc1full.write_trip_matrices.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "min_run_count": 1, "name": "mtc1full.write_trip_matrices.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_mtc_full:write_trip_matrices", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./mtc1full.py:55", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "mtc1mp4.atwork_subtour_destination.track_component": {"code": "class ComponentTiming:\n    def track_component(self):\n        durations = []\n        inject.add_injectable(\"output_dir\", model_dir(example_name, output_dir))\n        logfiler = config.log_file_path(f\"timing_log.mp_households_*.csv\")\n        for logfile in glob.glob(logfiler):\n            df = pd.read_csv(logfile)\n            dfq = df.query(f\"component_name=='{self.component_name}'\")\n            if len(dfq):\n                durations.append(dfq.iloc[-1].duration)\n        if len(durations):\n            return np.mean(durations)\n        else:\n            raise ValueError(\"no results available\")\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "name": "mtc1mp4.atwork_subtour_destination.track_component", "param_names": [], "params": [], "pretty_name": "MTC1_MP4:atwork_subtour_destination", "setup_cache_key": "./mtc1mp4.py:58", "timeout": 60.0, "type": "track", "unit": "s", "version": "1"}, "mtc1mp4.atwork_subtour_frequency.track_component": {"code": "class ComponentTiming:\n    def track_component(self):\n        durations = []\n        inject.add_injectable(\"output_dir\", model_dir(example_name, output_dir))\n        logfiler = config.log_file_path(f\"timing_log.mp_households_*.csv\")\n        for logfile in glob.glob(logfiler):\n            df = pd.read_csv(logfile)\n            dfq = df.query(f\"component_name=='{self.component_name}'\")\n            if len(dfq):\n                durations.append(dfq.iloc[-1].duration)\n        if len(durations):\n            return np.mean(durations)\n        else:\n            raise ValueError(\"no results available\")\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "name": "mtc1mp4.atwork_subtour_frequency.track_component", "param_names": [], "params": [], "pretty_name": "MTC1_MP4:atwork_subtour_frequency", "setup_cache_key": "./mtc1mp4.py:58", "timeout": 60.0, "type": "track", "unit": "s", "version": "1"}, "mtc1mp4.atwork_subtour_mode_choice.track_component": {"code": "class ComponentTiming:\n    def track_component(self):\n        durations = []\n        inject.add_injectable(\"output_dir\", model_dir(example_name, output_dir))\n        logfiler = config.log_file_path(f\"timing_log.mp_households_*.csv\")\n        for logfile in glob.glob(logfiler):\n            df = pd.read_csv(logfile)\n            dfq = df.query(f\"component_name=='{self.component_name}'\")\n            if len(dfq):\n                durations.append(dfq.iloc[-1].duration)\n        if len(durations):\n            return np.mean(durations)\n        else:\n            raise ValueError(\"no results available\")\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "name": "mtc1mp4.atwork_subtour_mode_choice.track_component", "param_names": [], "params": [], "pretty_name": "MTC1_MP4:atwork_subtour_mode_choice", "setup_cache_key": "./mtc1mp4.py:58", "timeout": 60.0, "type": "track", "unit": "s", "version": "1"}, "mtc1mp4.atwork_subtour_scheduling.track_component": {"code": "class ComponentTiming:\n    def track_component(self):\n        durations = []\n        inject.add_injectable(\"output_dir\", model_dir(example_name, output_dir))\n        logfiler = config.log_file_path(f\"timing_log.mp_households_*.csv\")\n        for logfile in glob.glob(logfiler):\n            df = pd.read_csv(logfile)\n            dfq = df.query(f\"component_name=='{self.component_name}'\")\n            if len(dfq):\n                durations.append(dfq.iloc[-1].duration)\n        if len(durations):\n            return np.mean(durations)\n        else:\n            raise ValueError(\"no results available\")\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "name": "mtc1mp4.atwork_subtour_scheduling.track_component", "param_names": [], "params": [], "pretty_name": "MTC1_MP4:atwork_subtour_scheduling", "setup_cache_key": "./mtc1mp4.py:58", "timeout": 60.0, "type": "track", "unit": "s", "version": "1"}, "mtc1mp4.auto_ownership_simulate.track_component": {"code": "class ComponentTiming:\n    def track_component(self):\n        durations = []\n        inject.add_injectable(\"output_dir\", model_dir(example_name, output_dir))\n        logfiler = config.log_file_path(f\"timing_log.mp_households_*.csv\")\n        for logfile in glob.glob(logfiler):\n            df = pd.read_csv(logfile)\n            dfq = df.query(f\"component_name=='{self.component_name}'\")\n            if len(dfq):\n                durations.append(dfq.iloc[-1].duration)\n        if len(durations):\n            return np.mean(durations)\n        else:\n            raise ValueError(\"no results available\")\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "name": "mtc1mp4.auto_ownership_simulate.track_component", "param_names": [], "params": [], "pretty_name": "MTC1_MP4:auto_ownership_simulate", "setup_cache_key": "./mtc1mp4.py:58", "timeout": 60.0, "type": "track", "unit": "s", "version": "1"}, "mtc1mp4.cdap_simulate.track_component": {"code": "class ComponentTiming:\n    def track_component(self):\n        durations = []\n        inject.add_injectable(\"output_dir\", model_dir(example_name, output_dir))\n        logfiler = config.log_file_path(f\"timing_log.mp_households_*.csv\")\n        for logfile in glob.glob(logfiler):\n            df = pd.read_csv(logfile)\n            dfq = df.query(f\"component_name=='{self.component_name}'\")\n            if len(dfq):\n                durations.append(dfq.iloc[-1].duration)\n        if len(durations):\n            return np.mean(durations)\n        else:\n            raise ValueError(\"no results available\")\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "name": "mtc1mp4.cdap_simulate.track_component", "param_names": [], "params": [], "pretty_name": "MTC1_MP4:cdap_simulate", "setup_cache_key": "./mtc1mp4.py:58", "timeout": 60.0, "type": "track", "unit": "s", "version": "1"}, "mtc1mp4.free_parking.track_component": {"code": "class ComponentTiming:\n    def track_component(self):\n        durations = []\n        inject.add_injectable(\"output_dir\", model_dir(example_name, output_dir))\n        logfiler = config.log_file_path(f\"timing_log.mp_households_*.csv\")\n        for logfile in glob.glob(logfiler):\n            df = pd.read_csv(logfile)\n            dfq = df.query(f\"component_name=='{self.component_name}'\")\n            if len(dfq):\n                durations.append(dfq.iloc[-1].duration)\n        if len(durations):\n            return np.mean(durations)\n        else:\n            raise ValueError(\"no results available\")\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "name": "mtc1mp4.free_parking.track_component", "param_names": [], "params": [], "pretty_name": "MTC1_MP4:free_parking", "setup_cache_key": "./mtc1mp4.py:58", "timeout": 60.0, "type": "track", "unit": "s", "version": "1"}, "mtc1mp4.joint_tour_composition.track_component": {"code": "class ComponentTiming:\n    def track_component(self):\n        durations = []\n        inject.add_injectable(\"output_dir\", model_dir(example_name, output_dir))\n        logfiler = config.log_file_path(f\"timing_log.mp_households_*.csv\")\n        for logfile in glob.glob(logfiler):\n            df = pd.read_csv(logfile)\n            dfq = df.query(f\"component_name=='{self.component_name}'\")\n            if len(dfq):\n                durations.append(dfq.iloc[-1].duration)\n        if len(durations):\n            return np.mean(durations)\n        else:\n            raise ValueError(\"no results available\")\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "name": "mtc1mp4.joint_tour_composition.track_component", "param_names": [], "params": [], "pretty_name": "MTC1_MP4:joint_tour_composition", "setup_cache_key": "./mtc1mp4.py:58", "timeout": 60.0, "type": "track", "unit": "s", "version": "1"}, "mtc1mp4.joint_tour_destination.track_component": {"code": "class ComponentTiming:\n    def track_component(self):\n        durations = []\n        inject.add_injectable(\"output_dir\", model_dir(example_name, output_dir))\n        logfiler = config.log_file_path(f\"timing_log.mp_households_*.csv\")\n        for logfile in glob.glob(logfiler):\n            df = pd.read_csv(logfile)\n            dfq = df.query(f\"component_name=='{self.component_name}'\")\n            if len(dfq):\n                durations.append(dfq.iloc[-1].duration)\n        if len(durations):\n            return np.mean(durations)\n        else:\n            raise ValueError(\"no results available\")\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "name": "mtc1mp4.joint_tour_destination.track_component", "param_names": [], "params": [], "pretty_name": "MTC1_MP4:joint_tour_destination", "setup_cache_key": "./mtc1mp4.py:58", "timeout": 60.0, "type": "track", "unit": "s", "version": "1"}, "mtc1mp4.joint_tour_frequency.track_component": {"code": "class ComponentTiming:\n    def track_component(self):\n        durations = []\n        inject.add_injectable(\"output_dir\", model_dir(example_name, output_dir))\n        logfiler = config.log_file_path(f\"timing_log.mp_households_*.csv\")\n        for logfile in glob.glob(logfiler):\n            df = pd.read_csv(logfile)\n            dfq = df.query(f\"component_name=='{self.component_name}'\")\n            if len(dfq):\n                durations.append(dfq.iloc[-1].duration)\n        if len(durations):\n            return np.mean(durations)\n        else:\n            raise ValueError(\"no results available\")\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "name": "mtc1mp4.joint_tour_frequency.track_component", "param_names": [], "params": [], "pretty_name": "MTC1_MP4:joint_tour_frequency", "setup_cache_key": "./mtc1mp4.py:58", "timeout": 60.0, "type": "track", "unit": "s", "version": "1"}, "mtc1mp4.joint_tour_participation.track_component": {"code": "class ComponentTiming:\n    def track_component(self):\n        durations = []\n        inject.add_injectable(\"output_dir\", model_dir(example_name, output_dir))\n        logfiler = config.log_file_path(f\"timing_log.mp_households_*.csv\")\n        for logfile in glob.glob(logfiler):\n            df = pd.read_csv(logfile)\n            dfq = df.query(f\"component_name=='{self.component_name}'\")\n            if len(dfq):\n                durations.append(dfq.iloc[-1].duration)\n        if len(durations):\n            return np.mean(durations)\n        else:\n            raise ValueError(\"no results available\")\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "name": "mtc1mp4.joint_tour_participation.track_component", "param_names": [], "params": [], "pretty_name": "MTC1_MP4:joint_tour_participation", "setup_cache_key": "./mtc1mp4.py:58", "timeout": 60.0, "type": "track", "unit": "s", "version": "1"}, "mtc1mp4.joint_tour_scheduling.track_component": {"code": "class ComponentTiming:\n    def track_component(self):\n        durations = []\n        inject.add_injectable(\"output_dir\", model_dir(example_name, output_dir))\n        logfiler = config.log_file_path(f\"timing_log.mp_households_*.csv\")\n        for logfile in glob.glob(logfiler):\n            df = pd.read_csv(logfile)\n            dfq = df.query(f\"component_name=='{self.component_name}'\")\n            if len(dfq):\n                durations.append(dfq.iloc[-1].duration)\n        if len(durations):\n            return np.mean(durations)\n        else:\n            raise ValueError(\"no results available\")\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "name": "mtc1mp4.joint_tour_scheduling.track_component", "param_names": [], "params": [], "pretty_name": "MTC1_MP4:joint_tour_scheduling", "setup_cache_key": "./mtc1mp4.py:58", "timeout": 60.0, "type": "track", "unit": "s", "version": "1"}, "mtc1mp4.mandatory_tour_frequency.track_component": {"code": "class ComponentTiming:\n    def track_component(self):\n        durations = []\n        inject.add_injectable(\"output_dir\", model_dir(example_name, output_dir))\n        logfiler = config.log_file_path(f\"timing_log.mp_households_*.csv\")\n        for logfile in glob.glob(logfiler):\n            df = pd.read_csv(logfile)\n            dfq = df.query(f\"component_name=='{self.component_name}'\")\n            if len(dfq):\n                durations.append(dfq.iloc[-1].duration)\n        if len(durations):\n            return np.mean(durations)\n        else:\n            raise ValueError(\"no results available\")\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "name": "mtc1mp4.mandatory_tour_frequency.track_component", "param_names": [], "params": [], "pretty_name": "MTC1_MP4:mandatory_tour_frequency", "setup_cache_key": "./mtc1mp4.py:58", "timeout": 60.0, "type": "track", "unit": "s", "version": "1"}, "mtc1mp4.mandatory_tour_scheduling.track_component": {"code": "class ComponentTiming:\n    def track_component(self):\n        durations = []\n        inject.add_injectable(\"output_dir\", model_dir(example_name, output_dir))\n        logfiler = config.log_file_path(f\"timing_log.mp_households_*.csv\")\n        for logfile in glob.glob(logfiler):\n            df = pd.read_csv(logfile)\n            dfq = df.query(f\"component_name=='{self.component_name}'\")\n            if len(dfq):\n                durations.append(dfq.iloc[-1].duration)\n        if len(durations):\n            return np.mean(durations)\n        else:\n            raise ValueError(\"no results available\")\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "name": "mtc1mp4.mandatory_tour_scheduling.track_component", "param_names": [], "params": [], "pretty_name": "MTC1_MP4:mandatory_tour_scheduling", "setup_cache_key": "./mtc1mp4.py:58", "timeout": 60.0, "type": "track", "unit": "s", "version": "1"}, "mtc1mp4.non_mandatory_tour_destination.track_component": {"code": "class ComponentTiming:\n    def track_component(self):\n        durations = []\n        inject.add_injectable(\"output_dir\", model_dir(example_name, output_dir))\n        logfiler = config.log_file_path(f\"timing_log.mp_households_*.csv\")\n        for logfile in glob.glob(logfiler):\n            df = pd.read_csv(logfile)\n            dfq = df.query(f\"component_name=='{self.component_name}'\")\n            if len(dfq):\n                durations.append(dfq.iloc[-1].duration)\n        if len(durations):\n            return np.mean(durations)\n        else:\n            raise ValueError(\"no results available\")\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "name": "mtc1mp4.non_mandatory_tour_destination.track_component", "param_names": [], "params": [], "pretty_name": "MTC1_MP4:non_mandatory_tour_destination", "setup_cache_key": "./mtc1mp4.py:58", "timeout": 60.0, "type": "track", "unit": "s", "version": "1"}, "mtc1mp4.non_mandatory_tour_frequency.track_component": {"code": "class ComponentTiming:\n    def track_component(self):\n        durations = []\n        inject.add_injectable(\"output_dir\", model_dir(example_name, output_dir))\n        logfiler = config.log_file_path(f\"timing_log.mp_households_*.csv\")\n        for logfile in glob.glob(logfiler):\n            df = pd.read_csv(logfile)\n            dfq = df.query(f\"component_name=='{self.component_name}'\")\n            if len(dfq):\n                durations.append(dfq.iloc[-1].duration)\n        if len(durations):\n            return np.mean(durations)\n        else:\n            raise ValueError(\"no results available\")\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "name": "mtc1mp4.non_mandatory_tour_frequency.track_component", "param_names": [], "params": [], "pretty_name": "MTC1_MP4:non_mandatory_tour_frequency", "setup_cache_key": "./mtc1mp4.py:58", "timeout": 60.0, "type": "track", "unit": "s", "version": "1"}, "mtc1mp4.non_mandatory_tour_scheduling.track_component": {"code": "class ComponentTiming:\n    def track_component(self):\n        durations = []\n        inject.add_injectable(\"output_dir\", model_dir(example_name, output_dir))\n        logfiler = config.log_file_path(f\"timing_log.mp_households_*.csv\")\n        for logfile in glob.glob(logfiler):\n            df = pd.read_csv(logfile)\n            dfq = df.query(f\"component_name=='{self.component_name}'\")\n            if len(dfq):\n                durations.append(dfq.iloc[-1].duration)\n        if len(durations):\n            return np.mean(durations)\n        else:\n            raise ValueError(\"no results available\")\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "name": "mtc1mp4.non_mandatory_tour_scheduling.track_component", "param_names": [], "params": [], "pretty_name": "MTC1_MP4:non_mandatory_tour_scheduling", "setup_cache_key": "./mtc1mp4.py:58", "timeout": 60.0, "type": "track", "unit": "s", "version": "1"}, "mtc1mp4.school_location.track_component": {"code": "class ComponentTiming:\n    def track_component(self):\n        durations = []\n        inject.add_injectable(\"output_dir\", model_dir(example_name, output_dir))\n        logfiler = config.log_file_path(f\"timing_log.mp_households_*.csv\")\n        for logfile in glob.glob(logfiler):\n            df = pd.read_csv(logfile)\n            dfq = df.query(f\"component_name=='{self.component_name}'\")\n            if len(dfq):\n                durations.append(dfq.iloc[-1].duration)\n        if len(durations):\n            return np.mean(durations)\n        else:\n            raise ValueError(\"no results available\")\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "name": "mtc1mp4.school_location.track_component", "param_names": [], "params": [], "pretty_name": "MTC1_MP4:school_location", "setup_cache_key": "./mtc1mp4.py:58", "timeout": 60.0, "type": "track", "unit": "s", "version": "1"}, "mtc1mp4.stop_frequency.track_component": {"code": "class ComponentTiming:\n    def track_component(self):\n        durations = []\n        inject.add_injectable(\"output_dir\", model_dir(example_name, output_dir))\n        logfiler = config.log_file_path(f\"timing_log.mp_households_*.csv\")\n        for logfile in glob.glob(logfiler):\n            df = pd.read_csv(logfile)\n            dfq = df.query(f\"component_name=='{self.component_name}'\")\n            if len(dfq):\n                durations.append(dfq.iloc[-1].duration)\n        if len(durations):\n            return np.mean(durations)\n        else:\n            raise ValueError(\"no results available\")\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "name": "mtc1mp4.stop_frequency.track_component", "param_names": [], "params": [], "pretty_name": "MTC1_MP4:stop_frequency", "setup_cache_key": "./mtc1mp4.py:58", "timeout": 60.0, "type": "track", "unit": "s", "version": "1"}, "mtc1mp4.tour_mode_choice_simulate.track_component": {"code": "class ComponentTiming:\n    def track_component(self):\n        durations = []\n        inject.add_injectable(\"output_dir\", model_dir(example_name, output_dir))\n        logfiler = config.log_file_path(f\"timing_log.mp_households_*.csv\")\n        for logfile in glob.glob(logfiler):\n            df = pd.read_csv(logfile)\n            dfq = df.query(f\"component_name=='{self.component_name}'\")\n            if len(dfq):\n                durations.append(dfq.iloc[-1].duration)\n        if len(durations):\n            return np.mean(durations)\n        else:\n            raise ValueError(\"no results available\")\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "name": "mtc1mp4.tour_mode_choice_simulate.track_component", "param_names": [], "params": [], "pretty_name": "MTC1_MP4:tour_mode_choice_simulate", "setup_cache_key": "./mtc1mp4.py:58", "timeout": 60.0, "type": "track", "unit": "s", "version": "1"}, "mtc1mp4.trip_destination.track_component": {"code": "class ComponentTiming:\n    def track_component(self):\n        durations = []\n        inject.add_injectable(\"output_dir\", model_dir(example_name, output_dir))\n        logfiler = config.log_file_path(f\"timing_log.mp_households_*.csv\")\n        for logfile in glob.glob(logfiler):\n            df = pd.read_csv(logfile)\n            dfq = df.query(f\"component_name=='{self.component_name}'\")\n            if len(dfq):\n                durations.append(dfq.iloc[-1].duration)\n        if len(durations):\n            return np.mean(durations)\n        else:\n            raise ValueError(\"no results available\")\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "name": "mtc1mp4.trip_destination.track_component", "param_names": [], "params": [], "pretty_name": "MTC1_MP4:trip_destination", "setup_cache_key": "./mtc1mp4.py:58", "timeout": 60.0, "type": "track", "unit": "s", "version": "1"}, "mtc1mp4.trip_mode_choice.track_component": {"code": "class ComponentTiming:\n    def track_component(self):\n        durations = []\n        inject.add_injectable(\"output_dir\", model_dir(example_name, output_dir))\n        logfiler = config.log_file_path(f\"timing_log.mp_households_*.csv\")\n        for logfile in glob.glob(logfiler):\n            df = pd.read_csv(logfile)\n            dfq = df.query(f\"component_name=='{self.component_name}'\")\n            if len(dfq):\n                durations.append(dfq.iloc[-1].duration)\n        if len(durations):\n            return np.mean(durations)\n        else:\n            raise ValueError(\"no results available\")\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "name": "mtc1mp4.trip_mode_choice.track_component", "param_names": [], "params": [], "pretty_name": "MTC1_MP4:trip_mode_choice", "setup_cache_key": "./mtc1mp4.py:58", "timeout": 60.0, "type": "track", "unit": "s", "version": "1"}, "mtc1mp4.trip_purpose.track_component": {"code": "class ComponentTiming:\n    def track_component(self):\n        durations = []\n        inject.add_injectable(\"output_dir\", model_dir(example_name, output_dir))\n        logfiler = config.log_file_path(f\"timing_log.mp_households_*.csv\")\n        for logfile in glob.glob(logfiler):\n            df = pd.read_csv(logfile)\n            dfq = df.query(f\"component_name=='{self.component_name}'\")\n            if len(dfq):\n                durations.append(dfq.iloc[-1].duration)\n        if len(durations):\n            return np.mean(durations)\n        else:\n            raise ValueError(\"no results available\")\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "name": "mtc1mp4.trip_purpose.track_component", "param_names": [], "params": [], "pretty_name": "MTC1_MP4:trip_purpose", "setup_cache_key": "./mtc1mp4.py:58", "timeout": 60.0, "type": "track", "unit": "s", "version": "1"}, "mtc1mp4.trip_purpose_and_destination.track_component": {"code": "class ComponentTiming:\n    def track_component(self):\n        durations = []\n        inject.add_injectable(\"output_dir\", model_dir(example_name, output_dir))\n        logfiler = config.log_file_path(f\"timing_log.mp_households_*.csv\")\n        for logfile in glob.glob(logfiler):\n            df = pd.read_csv(logfile)\n            dfq = df.query(f\"component_name=='{self.component_name}'\")\n            if len(dfq):\n                durations.append(dfq.iloc[-1].duration)\n        if len(durations):\n            return np.mean(durations)\n        else:\n            raise ValueError(\"no results available\")\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "name": "mtc1mp4.trip_purpose_and_destination.track_component", "param_names": [], "params": [], "pretty_name": "MTC1_MP4:trip_purpose_and_destination", "setup_cache_key": "./mtc1mp4.py:58", "timeout": 60.0, "type": "track", "unit": "s", "version": "1"}, "mtc1mp4.trip_scheduling.track_component": {"code": "class ComponentTiming:\n    def track_component(self):\n        durations = []\n        inject.add_injectable(\"output_dir\", model_dir(example_name, output_dir))\n        logfiler = config.log_file_path(f\"timing_log.mp_households_*.csv\")\n        for logfile in glob.glob(logfiler):\n            df = pd.read_csv(logfile)\n            dfq = df.query(f\"component_name=='{self.component_name}'\")\n            if len(dfq):\n                durations.append(dfq.iloc[-1].duration)\n        if len(durations):\n            return np.mean(durations)\n        else:\n            raise ValueError(\"no results available\")\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "name": "mtc1mp4.trip_scheduling.track_component", "param_names": [], "params": [], "pretty_name": "MTC1_MP4:trip_scheduling", "setup_cache_key": "./mtc1mp4.py:58", "timeout": 60.0, "type": "track", "unit": "s", "version": "1"}, "mtc1mp4.workplace_location.track_component": {"code": "class ComponentTiming:\n    def track_component(self):\n        durations = []\n        inject.add_injectable(\"output_dir\", model_dir(example_name, output_dir))\n        logfiler = config.log_file_path(f\"timing_log.mp_households_*.csv\")\n        for logfile in glob.glob(logfiler):\n            df = pd.read_csv(logfile)\n            dfq = df.query(f\"component_name=='{self.component_name}'\")\n            if len(dfq):\n                durations.append(dfq.iloc[-1].duration)\n        if len(durations):\n            return np.mean(durations)\n        else:\n            raise ValueError(\"no results available\")\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n        config_overload_dir=DYNAMIC_CONFIG_DIR,\n    )", "name": "mtc1mp4.workplace_location.track_component", "param_names": [], "params": [], "pretty_name": "MTC1_MP4:workplace_location", "setup_cache_key": "./mtc1mp4.py:58", "timeout": 60.0, "type": "track", "unit": "s", "version": "1"}, "sandag1example.atwork_subtour_destination.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1example.atwork_subtour_destination.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone:atwork_subtour_destination", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1example.atwork_subtour_frequency.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1example.atwork_subtour_frequency.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone:atwork_subtour_frequency", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1example.atwork_subtour_mode_choice.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1example.atwork_subtour_mode_choice.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone:atwork_subtour_mode_choice", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1example.atwork_subtour_scheduling.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1example.atwork_subtour_scheduling.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone:atwork_subtour_scheduling", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1example.auto_ownership_simulate.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1example.auto_ownership_simulate.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone:auto_ownership_simulate", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1example.cdap_simulate.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1example.cdap_simulate.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone:cdap_simulate", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1example.free_parking.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1example.free_parking.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone:free_parking", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1example.joint_tour_composition.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1example.joint_tour_composition.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone:joint_tour_composition", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1example.joint_tour_destination.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1example.joint_tour_destination.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone:joint_tour_destination", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1example.joint_tour_frequency.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1example.joint_tour_frequency.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone:joint_tour_frequency", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1example.joint_tour_participation.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1example.joint_tour_participation.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone:joint_tour_participation", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1example.joint_tour_scheduling.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1example.joint_tour_scheduling.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone:joint_tour_scheduling", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1example.mandatory_tour_frequency.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1example.mandatory_tour_frequency.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone:mandatory_tour_frequency", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1example.mandatory_tour_scheduling.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1example.mandatory_tour_scheduling.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone:mandatory_tour_scheduling", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1example.non_mandatory_tour_destination.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1example.non_mandatory_tour_destination.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone:non_mandatory_tour_destination", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1example.non_mandatory_tour_frequency.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1example.non_mandatory_tour_frequency.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone:non_mandatory_tour_frequency", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1example.non_mandatory_tour_scheduling.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1example.non_mandatory_tour_scheduling.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone:non_mandatory_tour_scheduling", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1example.school_location.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1example.school_location.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone:school_location", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1example.stop_frequency.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1example.stop_frequency.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone:stop_frequency", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1example.tour_mode_choice_simulate.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1example.tour_mode_choice_simulate.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone:tour_mode_choice_simulate", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1example.trip_destination.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1example.trip_destination.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone:trip_destination", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1example.trip_mode_choice.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1example.trip_mode_choice.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone:trip_mode_choice", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1example.trip_purpose.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1example.trip_purpose.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone:trip_purpose", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1example.trip_purpose_and_destination.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1example.trip_purpose_and_destination.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone:trip_purpose_and_destination", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1example.trip_scheduling.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1example.trip_scheduling.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone:trip_scheduling", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1example.workplace_location.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1example.workplace_location.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone:workplace_location", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1example.write_trip_matrices.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1example.write_trip_matrices.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone:write_trip_matrices", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1full.atwork_subtour_destination.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1full.atwork_subtour_destination.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone_full:atwork_subtour_destination", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1full.atwork_subtour_frequency.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1full.atwork_subtour_frequency.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone_full:atwork_subtour_frequency", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1full.atwork_subtour_mode_choice.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1full.atwork_subtour_mode_choice.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone_full:atwork_subtour_mode_choice", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1full.atwork_subtour_scheduling.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1full.atwork_subtour_scheduling.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone_full:atwork_subtour_scheduling", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1full.auto_ownership_simulate.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1full.auto_ownership_simulate.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone_full:auto_ownership_simulate", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1full.cdap_simulate.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1full.cdap_simulate.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone_full:cdap_simulate", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1full.free_parking.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1full.free_parking.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone_full:free_parking", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1full.joint_tour_composition.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1full.joint_tour_composition.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone_full:joint_tour_composition", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1full.joint_tour_destination.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1full.joint_tour_destination.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone_full:joint_tour_destination", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1full.joint_tour_frequency.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1full.joint_tour_frequency.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone_full:joint_tour_frequency", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1full.joint_tour_participation.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1full.joint_tour_participation.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone_full:joint_tour_participation", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1full.joint_tour_scheduling.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1full.joint_tour_scheduling.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone_full:joint_tour_scheduling", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1full.mandatory_tour_frequency.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1full.mandatory_tour_frequency.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone_full:mandatory_tour_frequency", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1full.mandatory_tour_scheduling.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1full.mandatory_tour_scheduling.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone_full:mandatory_tour_scheduling", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1full.non_mandatory_tour_destination.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1full.non_mandatory_tour_destination.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone_full:non_mandatory_tour_destination", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1full.non_mandatory_tour_frequency.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1full.non_mandatory_tour_frequency.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone_full:non_mandatory_tour_frequency", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1full.non_mandatory_tour_scheduling.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1full.non_mandatory_tour_scheduling.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone_full:non_mandatory_tour_scheduling", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1full.school_location.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1full.school_location.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone_full:school_location", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1full.stop_frequency.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1full.stop_frequency.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone_full:stop_frequency", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1full.tour_mode_choice_simulate.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1full.tour_mode_choice_simulate.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone_full:tour_mode_choice_simulate", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1full.trip_destination.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1full.trip_destination.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone_full:trip_destination", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1full.trip_mode_choice.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1full.trip_mode_choice.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone_full:trip_mode_choice", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1full.trip_purpose.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1full.trip_purpose.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone_full:trip_purpose", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1full.trip_purpose_and_destination.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1full.trip_purpose_and_destination.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone_full:trip_purpose_and_destination", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1full.trip_scheduling.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1full.trip_scheduling.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone_full:trip_scheduling", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1full.workplace_location.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1full.workplace_location.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone_full:workplace_location", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag1full.write_trip_matrices.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag1full.write_trip_matrices.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_1_zone_full:write_trip_matrices", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag1full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2example.atwork_subtour_destination.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2example.atwork_subtour_destination.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone:atwork_subtour_destination", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2example.atwork_subtour_frequency.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2example.atwork_subtour_frequency.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone:atwork_subtour_frequency", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2example.atwork_subtour_mode_choice.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2example.atwork_subtour_mode_choice.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone:atwork_subtour_mode_choice", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2example.atwork_subtour_scheduling.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2example.atwork_subtour_scheduling.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone:atwork_subtour_scheduling", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2example.auto_ownership_simulate.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2example.auto_ownership_simulate.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone:auto_ownership_simulate", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2example.cdap_simulate.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2example.cdap_simulate.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone:cdap_simulate", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2example.free_parking.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2example.free_parking.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone:free_parking", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2example.joint_tour_composition.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2example.joint_tour_composition.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone:joint_tour_composition", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2example.joint_tour_destination.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2example.joint_tour_destination.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone:joint_tour_destination", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2example.joint_tour_frequency.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2example.joint_tour_frequency.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone:joint_tour_frequency", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2example.joint_tour_participation.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2example.joint_tour_participation.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone:joint_tour_participation", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2example.joint_tour_scheduling.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2example.joint_tour_scheduling.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone:joint_tour_scheduling", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2example.mandatory_tour_frequency.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2example.mandatory_tour_frequency.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone:mandatory_tour_frequency", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2example.mandatory_tour_scheduling.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2example.mandatory_tour_scheduling.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone:mandatory_tour_scheduling", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2example.non_mandatory_tour_destination.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2example.non_mandatory_tour_destination.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone:non_mandatory_tour_destination", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2example.non_mandatory_tour_frequency.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2example.non_mandatory_tour_frequency.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone:non_mandatory_tour_frequency", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2example.non_mandatory_tour_scheduling.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2example.non_mandatory_tour_scheduling.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone:non_mandatory_tour_scheduling", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2example.school_location.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2example.school_location.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone:school_location", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2example.stop_frequency.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2example.stop_frequency.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone:stop_frequency", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2example.tour_mode_choice_simulate.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2example.tour_mode_choice_simulate.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone:tour_mode_choice_simulate", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2example.trip_destination.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2example.trip_destination.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone:trip_destination", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2example.trip_mode_choice.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2example.trip_mode_choice.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone:trip_mode_choice", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2example.trip_purpose.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2example.trip_purpose.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone:trip_purpose", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2example.trip_purpose_and_destination.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2example.trip_purpose_and_destination.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone:trip_purpose_and_destination", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2example.trip_scheduling.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2example.trip_scheduling.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone:trip_scheduling", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2example.workplace_location.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2example.workplace_location.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone:workplace_location", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2example.write_trip_matrices.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2example.write_trip_matrices.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone:write_trip_matrices", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2full.atwork_subtour_destination.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2full.atwork_subtour_destination.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone_full:atwork_subtour_destination", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2full.atwork_subtour_frequency.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2full.atwork_subtour_frequency.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone_full:atwork_subtour_frequency", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2full.atwork_subtour_mode_choice.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2full.atwork_subtour_mode_choice.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone_full:atwork_subtour_mode_choice", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2full.atwork_subtour_scheduling.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2full.atwork_subtour_scheduling.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone_full:atwork_subtour_scheduling", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2full.auto_ownership_simulate.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2full.auto_ownership_simulate.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone_full:auto_ownership_simulate", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2full.cdap_simulate.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2full.cdap_simulate.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone_full:cdap_simulate", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2full.free_parking.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2full.free_parking.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone_full:free_parking", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2full.joint_tour_composition.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2full.joint_tour_composition.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone_full:joint_tour_composition", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2full.joint_tour_destination.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2full.joint_tour_destination.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone_full:joint_tour_destination", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2full.joint_tour_frequency.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2full.joint_tour_frequency.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone_full:joint_tour_frequency", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2full.joint_tour_participation.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2full.joint_tour_participation.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone_full:joint_tour_participation", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2full.joint_tour_scheduling.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2full.joint_tour_scheduling.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone_full:joint_tour_scheduling", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2full.mandatory_tour_frequency.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2full.mandatory_tour_frequency.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone_full:mandatory_tour_frequency", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2full.mandatory_tour_scheduling.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2full.mandatory_tour_scheduling.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone_full:mandatory_tour_scheduling", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2full.non_mandatory_tour_destination.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2full.non_mandatory_tour_destination.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone_full:non_mandatory_tour_destination", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2full.non_mandatory_tour_frequency.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2full.non_mandatory_tour_frequency.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone_full:non_mandatory_tour_frequency", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2full.non_mandatory_tour_scheduling.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2full.non_mandatory_tour_scheduling.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone_full:non_mandatory_tour_scheduling", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2full.school_location.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2full.school_location.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone_full:school_location", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2full.stop_frequency.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2full.stop_frequency.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone_full:stop_frequency", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2full.tour_mode_choice_simulate.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2full.tour_mode_choice_simulate.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone_full:tour_mode_choice_simulate", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2full.trip_destination.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2full.trip_destination.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone_full:trip_destination", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2full.trip_mode_choice.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2full.trip_mode_choice.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone_full:trip_mode_choice", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2full.trip_purpose.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2full.trip_purpose.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone_full:trip_purpose", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2full.trip_purpose_and_destination.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2full.trip_purpose_and_destination.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone_full:trip_purpose_and_destination", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2full.trip_scheduling.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2full.trip_scheduling.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone_full:trip_scheduling", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2full.workplace_location.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2full.workplace_location.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone_full:workplace_location", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag2full.write_trip_matrices.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag2full.write_trip_matrices.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_2_zone_full:write_trip_matrices", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag2full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3example.atwork_subtour_destination.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3example.atwork_subtour_destination.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone:atwork_subtour_destination", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3example.atwork_subtour_frequency.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3example.atwork_subtour_frequency.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone:atwork_subtour_frequency", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3example.atwork_subtour_mode_choice.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3example.atwork_subtour_mode_choice.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone:atwork_subtour_mode_choice", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3example.atwork_subtour_scheduling.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3example.atwork_subtour_scheduling.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone:atwork_subtour_scheduling", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3example.auto_ownership_simulate.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3example.auto_ownership_simulate.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone:auto_ownership_simulate", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3example.cdap_simulate.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3example.cdap_simulate.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone:cdap_simulate", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3example.free_parking.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3example.free_parking.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone:free_parking", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3example.joint_tour_composition.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3example.joint_tour_composition.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone:joint_tour_composition", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3example.joint_tour_destination.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3example.joint_tour_destination.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone:joint_tour_destination", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3example.joint_tour_frequency.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3example.joint_tour_frequency.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone:joint_tour_frequency", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3example.joint_tour_participation.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3example.joint_tour_participation.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone:joint_tour_participation", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3example.joint_tour_scheduling.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3example.joint_tour_scheduling.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone:joint_tour_scheduling", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3example.mandatory_tour_frequency.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3example.mandatory_tour_frequency.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone:mandatory_tour_frequency", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3example.mandatory_tour_scheduling.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3example.mandatory_tour_scheduling.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone:mandatory_tour_scheduling", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3example.non_mandatory_tour_destination.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3example.non_mandatory_tour_destination.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone:non_mandatory_tour_destination", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3example.non_mandatory_tour_frequency.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3example.non_mandatory_tour_frequency.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone:non_mandatory_tour_frequency", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3example.non_mandatory_tour_scheduling.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3example.non_mandatory_tour_scheduling.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone:non_mandatory_tour_scheduling", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3example.school_location.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3example.school_location.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone:school_location", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3example.stop_frequency.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3example.stop_frequency.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone:stop_frequency", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3example.tour_mode_choice_simulate.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3example.tour_mode_choice_simulate.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone:tour_mode_choice_simulate", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3example.trip_destination.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3example.trip_destination.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone:trip_destination", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3example.trip_mode_choice.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3example.trip_mode_choice.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone:trip_mode_choice", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3example.trip_purpose.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3example.trip_purpose.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone:trip_purpose", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3example.trip_purpose_and_destination.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3example.trip_purpose_and_destination.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone:trip_purpose_and_destination", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3example.trip_scheduling.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3example.trip_scheduling.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone:trip_scheduling", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3example.workplace_location.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3example.workplace_location.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone:workplace_location", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3example.write_trip_matrices.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3example.write_trip_matrices.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone:write_trip_matrices", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3example.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3full.atwork_subtour_destination.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3full.atwork_subtour_destination.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone_full:atwork_subtour_destination", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3full.atwork_subtour_frequency.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3full.atwork_subtour_frequency.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone_full:atwork_subtour_frequency", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3full.atwork_subtour_mode_choice.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3full.atwork_subtour_mode_choice.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone_full:atwork_subtour_mode_choice", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3full.atwork_subtour_scheduling.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3full.atwork_subtour_scheduling.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone_full:atwork_subtour_scheduling", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3full.auto_ownership_simulate.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3full.auto_ownership_simulate.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone_full:auto_ownership_simulate", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3full.cdap_simulate.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3full.cdap_simulate.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone_full:cdap_simulate", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3full.free_parking.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3full.free_parking.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone_full:free_parking", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3full.joint_tour_composition.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3full.joint_tour_composition.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone_full:joint_tour_composition", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3full.joint_tour_destination.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3full.joint_tour_destination.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone_full:joint_tour_destination", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3full.joint_tour_frequency.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3full.joint_tour_frequency.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone_full:joint_tour_frequency", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3full.joint_tour_participation.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3full.joint_tour_participation.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone_full:joint_tour_participation", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3full.joint_tour_scheduling.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3full.joint_tour_scheduling.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone_full:joint_tour_scheduling", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3full.mandatory_tour_frequency.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3full.mandatory_tour_frequency.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone_full:mandatory_tour_frequency", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3full.mandatory_tour_scheduling.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3full.mandatory_tour_scheduling.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone_full:mandatory_tour_scheduling", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3full.non_mandatory_tour_destination.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3full.non_mandatory_tour_destination.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone_full:non_mandatory_tour_destination", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3full.non_mandatory_tour_frequency.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3full.non_mandatory_tour_frequency.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone_full:non_mandatory_tour_frequency", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3full.non_mandatory_tour_scheduling.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3full.non_mandatory_tour_scheduling.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone_full:non_mandatory_tour_scheduling", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3full.school_location.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3full.school_location.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone_full:school_location", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3full.stop_frequency.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3full.stop_frequency.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone_full:stop_frequency", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3full.tour_mode_choice_simulate.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3full.tour_mode_choice_simulate.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone_full:tour_mode_choice_simulate", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3full.trip_destination.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3full.trip_destination.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone_full:trip_destination", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3full.trip_mode_choice.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3full.trip_mode_choice.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone_full:trip_mode_choice", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3full.trip_purpose.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3full.trip_purpose.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone_full:trip_purpose", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3full.trip_purpose_and_destination.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3full.trip_purpose_and_destination.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone_full:trip_purpose_and_destination", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3full.trip_scheduling.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3full.trip_scheduling.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone_full:trip_scheduling", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3full.workplace_location.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3full.workplace_location.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone_full:workplace_location", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}, "sandag3full.write_trip_matrices.time_component": {"code": "class ComponentTiming:\n    def time_component(self):\n        run_component(self.component_name)\n\n    def setup(self):\n        setup_component(\n            self.component_name,\n            model_dir(example_name),\n            preload_injectables,\n            config_dirs,\n            data_dir,\n            output_dir,\n        )\n\ndef setup_cache():\n    template_setup_cache(\n        EXAMPLE_NAME,\n        COMPONENT_NAMES,\n        BENCHMARK_SETTINGS,\n        dict(\n            read_skim_cache=SKIM_CACHE,\n            write_skim_cache=SKIM_CACHE,\n        ),\n        CONFIGS_DIRS,\n        DATA_DIR,\n        OUTPUT_DIR,\n    )", "min_run_count": 1, "name": "sandag3full.write_trip_matrices.time_component", "number": 1, "param_names": [], "params": [], "pretty_name": "example_sandag_3_zone_full:write_trip_matrices", "processes": 1, "repeat": 1, "sample_time": 0.01, "setup_cache_key": "./sandag3full.py:16", "timeout": 36000.0, "type": "time", "unit": "seconds", "version": "1", "warmup_time": 0}}, "machines": {"OAKCWS03": {"arch": "x86_64", "cpu": "Intel(R) Xeon(R) E5-2697 v4 @ 2.30 GHz", "machine": "OAKCWS03", "num_cpu": "36", "os": "Windows 10", "ram": "64GB", "version": 1}, "CS-CAMCWS02": {"arch": "x86_64", "cpu": "Intel Xeon E5-2697 v4 @ 2.3GHz", "machine": "CS-CAMCWS02", "num_cpu": "36", "os": "Windows 10", "ram": "64GB", "version": 1}, "CAMHPC01": {"arch": "x86_64", "cpu": "Intel(R) Xeon(R) CPU E5-2699 v3 @2.30GHz (2 processors)", "machine": "CAMHPC01", "num_cpu": "72", "os": "Windows 2012ServerR2", "ram": "256 GB", "version": 1}, "CHICWS02": {"arch": "AMD64", "cpu": "Intel(R) Xeon(R) Silver 4116 CPU @ 2.10GHz   2.10 GHz  (2 processors)", "machine": "CHICWS02", "num_cpu": "48", "os": "Windows 10", "ram": "256 GB", "version": 1}, "MEDCWS01": {"arch": "x86_64", "cpu": "Intel(R) Xeon(R) Silver 4116 CPU @ 2.10GHz   2.10 GHz  (2 processors)", "machine": "MEDCWS01", "num_cpu": "48", "os": "Windows 10 Enterprise", "ram": "256 GB", "version": 1}, "LUMBERJACK": {"arch": "x86_64", "cpu": "Intel(R) Core(TM) i9-9880H CPU @ 2.30GHz", "machine": "LUMBERJACK", "num_cpu": "16", "os": "Darwin 19.6.0", "ram": "64GB", "version": 1}}, "tags": {"0.9.1": 1020, "0.9.2": 1061, "0.9.5": 1182, "0.9.5.1": 1190, "0.9.5.2": 1214, "0.9.7": 1318, "v0.9.9": 1478, "v0.9.9.1": 1489, "v1.0": 1568, "v1.0.1": 1576, "v1.0.2": 1731, "v1.0.3": 1758, "v1.0.4": 2040}, "pages": [["", "Grid view", "Display as a agrid"], ["summarylist", "List view", "Display as a list"], ["regressions", "Show regressions", "Display information about recent regressions"]]}